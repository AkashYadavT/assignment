declare const LionSwitchButton_base: typeof LitElement & import("@open-wc/dedupe-mixin").Constructor<import("../../core/types/DisabledWithTabIndexMixinTypes.js").DisabledWithTabIndexHost> & Pick<typeof import("../../core/types/DisabledWithTabIndexMixinTypes.js").DisabledWithTabIndexHost, "prototype"> & import("@open-wc/dedupe-mixin").Constructor<import("../../core/types/DisabledMixinTypes.js").DisabledHost> & Pick<typeof import("../../core/types/DisabledMixinTypes.js").DisabledHost, "prototype"> & Pick<typeof LitElement, "prototype" | "_$litElement$" | "enabledWarnings" | "enableWarning" | "disableWarning" | "addInitializer" | "_initializers" | "elementProperties" | "properties" | "elementStyles" | "styles" | "observedAttributes" | "createProperty" | "getPropertyOptions" | "shadowRootOptions">;
export class LionSwitchButton extends LionSwitchButton_base {
    static get properties(): {
        checked: {
            type: BooleanConstructor;
            reflect: boolean;
        };
    };
    static get styles(): import("lit").CSSResult[];
    render(): import("lit-html").TemplateResult<1>;
    value: string;
    checked: boolean;
    __initialized: boolean;
    /** @protected */
    protected _toggleChecked(): void;
    /** @private */
    private __handleKeydown;
    /** @private */
    private __handleKeyup;
    /** @private */
    private __checkedStateChange;
    /**
     * @param {KeyboardEvent} ev
     * @protected
     */
    protected _handleKeydown(ev: KeyboardEvent): void;
    /**
     * @param {KeyboardEvent} ev
     * @protected
     */
    protected _handleKeyup(ev: KeyboardEvent): void;
    /**
     * @param {string} [name]
     * @param {unknown} [oldValue]
     * @param {import('lit').PropertyDeclaration} [options]
     * @returns {void}
     */
    requestUpdate(name?: string | undefined, oldValue?: unknown, options?: import("lit").PropertyDeclaration<any, any> | undefined): void;
    /** @param {import('lit').PropertyValues } changedProperties */
    firstUpdated(changedProperties: import('lit').PropertyValues): void;
}
import { LitElement } from "lit";
export {};
//# sourceMappingURL=LionSwitchButton.d.ts.map