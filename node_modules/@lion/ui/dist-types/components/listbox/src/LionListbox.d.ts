declare const LionListbox_base: typeof LitElement & import("@open-wc/dedupe-mixin").Constructor<import("../../form-core/types/validate/ValidateMixinTypes.js").ValidateHost> & Pick<typeof import("../../form-core/types/validate/ValidateMixinTypes.js").ValidateHost, "prototype" | "validationTypes"> & import("@open-wc/dedupe-mixin").Constructor<import("../../form-core/types/FormControlMixinTypes.js").FormControlHost> & Pick<typeof import("../../form-core/types/FormControlMixinTypes.js").FormControlHost, "prototype" | "properties" | "styles"> & import("@open-wc/dedupe-mixin").Constructor<import("../../form-core/types/utils/SyncUpdatableMixinTypes.js").SyncUpdatableHost> & Pick<typeof import("../../form-core/types/utils/SyncUpdatableMixinTypes.js").SyncUpdatableHost, "prototype"> & import("@open-wc/dedupe-mixin").Constructor<import("../../core/types/DisabledMixinTypes.js").DisabledHost> & Pick<typeof import("../../core/types/DisabledMixinTypes.js").DisabledHost, "prototype"> & import("@open-wc/dedupe-mixin").Constructor<import("../../core/types/SlotMixinTypes.js").SlotHost> & Pick<typeof import("../../core/types/SlotMixinTypes.js").SlotHost, "prototype"> & import("@open-wc/dedupe-mixin").Constructor<import("@open-wc/scoped-elements/types.js").ScopedElementsHost> & Pick<typeof import("@open-wc/scoped-elements/types.js").ScopedElementsHost, "prototype" | "shadowRootOptions" | "scopedElements"> & Pick<typeof LitElement, "prototype" | "_$litElement$" | "enabledWarnings" | "enableWarning" | "disableWarning" | "addInitializer" | "_initializers" | "elementProperties" | "properties" | "elementStyles" | "styles" | "observedAttributes" | "createProperty" | "getPropertyOptions" | "shadowRootOptions"> & import("@open-wc/dedupe-mixin").Constructor<import("../../form-core/types/InteractionStateMixinTypes.js").InteractionStateHost> & Pick<typeof import("../../form-core/types/InteractionStateMixinTypes.js").InteractionStateHost, "prototype"> & import("@open-wc/dedupe-mixin").Constructor<import("../../form-core/types/FocusMixinTypes.js").FocusHost> & Pick<typeof import("../../form-core/types/FocusMixinTypes.js").FocusHost, "prototype"> & import("@open-wc/dedupe-mixin").Constructor<import("../types/ListboxMixinTypes.js").ListboxHost> & Pick<typeof import("../types/ListboxMixinTypes.js").ListboxHost, "prototype" | "styles"> & import("@open-wc/dedupe-mixin").Constructor<import("../../form-core/types/choice-group/ChoiceGroupMixinTypes.js").ChoiceGroupHost> & Pick<typeof import("../../form-core/types/choice-group/ChoiceGroupMixinTypes.js").ChoiceGroupHost, "prototype"> & import("@open-wc/dedupe-mixin").Constructor<import("../../form-core/types/registration/FormRegistrarMixinTypes.js").FormRegistrarHost> & Pick<typeof import("../../form-core/types/registration/FormRegistrarMixinTypes.js").FormRegistrarHost, "prototype">;
/**
 * LionListbox: implements the wai-aria listbox design pattern and integrates it as a Lion
 * FormControl
 */
export class LionListbox extends LionListbox_base {
    /**
     * @configure InteractionStateMixin, ValidateMixin
     */
    get _feedbackConditionMeta(): {
        focused: boolean;
    };
    /**
     * @configure FocusMixin
     */
    get _focusableNode(): HTMLInputElement | HTMLTextAreaElement | import("../../form-core/types/FormControlMixinTypes.js").HTMLElementWithValue;
}
import { LitElement } from "lit";
export {};
//# sourceMappingURL=LionListbox.d.ts.map