/**
 * @typedef {import('lit').CSSResult} CSSResult
 */
/**
 * LionInputRange: extension of lion-input.
 *
 * @customElement `lion-input-range`
 */
export class LionInputRange extends LionInput {
    /**
     * @param {CSSResult} scope
     */
    static scopedStyles(scope: CSSResult): import("lit").CSSResult;
    /** @type {ScopedStylesController} */
    scopedStylesController: ScopedStylesController;
    min: number;
    max: number;
    step: number;
    unit: string;
    noMinMaxLabels: boolean;
    /**
     * @param {string} modelValue
     */
    parser: (modelValue: string) => number;
    /** @protected */
    protected _inputGroupTemplate(): import("lit-html").TemplateResult<1>;
    /** @protected */
    protected _inputGroupInputTemplate(): import("lit-html").TemplateResult<1>;
}
export type CSSResult = import('lit').CSSResult;
import { LionInput } from "../../../exports/input.js";
import { ScopedStylesController } from "../../../exports/core.js";
//# sourceMappingURL=LionInputRange.d.ts.map