declare const LionInputDate_base: typeof LionInput & import("@open-wc/dedupe-mixin").Constructor<import("../../localize/types/LocalizeMixinTypes.js").LocalizeMixinHost> & Pick<typeof import("../../localize/types/LocalizeMixinTypes.js").LocalizeMixinHost, "prototype" | "localizeNamespaces" | "waitForLocalizeNamespaces"> & Pick<typeof import("lit").LitElement, "prototype" | "_$litElement$" | "enabledWarnings" | "enableWarning" | "disableWarning" | "addInitializer" | "_initializers" | "elementProperties" | "properties" | "elementStyles" | "styles" | "observedAttributes" | "createProperty" | "getPropertyOptions" | "shadowRootOptions">;
/**
 * `LionInputDate` has a .modelValue of type Date. It parses, formats and validates based
 * on locale.
 *
 * @customElement lion-input-date
 */
export class LionInputDate extends LionInputDate_base {
    /** @type {any} */
    static get properties(): any;
    /**
     * @param {string} value
     */
    parser: (value: string) => Date | undefined;
    formatter: typeof formatDate;
    /**
     * @param {Date} modelValue
     */
    serializer(modelValue: Date): string;
    /**
     * @param {string} serializedValue
     */
    deserializer(serializedValue: string): Date;
}
import { LionInput } from "../../../exports/input.js";
import { formatDate } from "../../../exports/localize-no-side-effects.js";
export {};
//# sourceMappingURL=LionInputDate.d.ts.map