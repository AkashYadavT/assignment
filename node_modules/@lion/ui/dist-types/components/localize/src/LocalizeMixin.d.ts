export type LocalizeMixin = import('../types/LocalizeMixinTypes.js').LocalizeMixin;
export const LocalizeMixin: <T extends import("@open-wc/dedupe-mixin").Constructor<import("lit").LitElement>>(superclass: T) => T & import("@open-wc/dedupe-mixin").Constructor<import("../types/LocalizeMixinTypes.js").LocalizeMixinHost> & Pick<typeof import("../types/LocalizeMixinTypes.js").LocalizeMixinHost, "prototype" | "localizeNamespaces" | "waitForLocalizeNamespaces"> & Pick<typeof import("lit").LitElement, "prototype" | "_$litElement$" | "enabledWarnings" | "enableWarning" | "disableWarning" | "addInitializer" | "_initializers" | "elementProperties" | "properties" | "elementStyles" | "styles" | "observedAttributes" | "createProperty" | "getPropertyOptions" | "shadowRootOptions">;
export type DirectiveResult = import('lit/directive.js').DirectiveResult;
export type NamespaceObject = import('../types/LocalizeMixinTypes.js').NamespaceObject;
//# sourceMappingURL=LocalizeMixin.d.ts.map