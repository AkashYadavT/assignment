/**
 * @typedef {import('@lion/ui/combobox.js').LionCombobox} LionCombobox
 */
/**
 * @param { LionCombobox } el
 */
export function getComboboxMembers(el: LionCombobox): {
    _invokerNode: any;
    _overlayCtrl: import("../../overlays/src/OverlayController.js").OverlayController;
    _comboboxNode: HTMLElement;
    _inputNode: HTMLInputElement;
    _listboxNode: import("../../listbox/src/LionOptions.js").LionOptions;
    _selectionDisplayNode: import("../types/SelectionDisplay.js").SelectionDisplay | null;
    _activeDescendantOwnerNode: HTMLInputElement;
    _ariaVersion: "1.1" | "1.0";
    _helpTextNode: HTMLElement;
    _labelNode: HTMLElement;
    _feedbackNode: import("../../../exports/form-core.js").LionValidationFeedback;
    _allValidators: any;
};
/**
 * @param {LionCombobox} el
 * @param {string} value
 */
export function mimicUserTyping(el: LionCombobox, value: string): void;
/**
 * @param {HTMLElement} el
 * @param {string} key
 */
export function mimicKeyPress(el: HTMLElement, key: string): void;
/**
 * @param {LionCombobox} el
 * @param {string[]} values
 */
export function mimicUserTypingAdvanced(el: LionCombobox, values: string[]): Promise<void>;
/**
 * @param {LionCombobox} el
 */
export function getFilteredOptionValues(el: LionCombobox): string[];
export type LionCombobox = import('@lion/ui/combobox.js').LionCombobox;
//# sourceMappingURL=combobox-helpers.d.ts.map