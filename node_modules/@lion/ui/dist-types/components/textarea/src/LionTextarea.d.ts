declare const LionTextarea_base: typeof LionFieldWithTextArea & import("@open-wc/dedupe-mixin").Constructor<import("../../form-core/types/NativeTextFieldMixinTypes.js").NativeTextFieldHost> & Pick<typeof import("../../form-core/types/NativeTextFieldMixinTypes.js").NativeTextFieldHost, "prototype"> & import("@open-wc/dedupe-mixin").Constructor<import("../../form-core/types/FormatMixinTypes.js").FormatHost> & Pick<typeof import("../../form-core/types/FormatMixinTypes.js").FormatHost, "prototype"> & import("@open-wc/dedupe-mixin").Constructor<import("../../form-core/types/FocusMixinTypes.js").FocusHost> & Pick<typeof import("../../form-core/types/FocusMixinTypes.js").FocusHost, "prototype"> & import("@open-wc/dedupe-mixin").Constructor<import("../../form-core/types/FormControlMixinTypes.js").FormControlHost> & Pick<typeof import("../../form-core/types/FormControlMixinTypes.js").FormControlHost, "prototype" | "properties" | "styles">;
/**
 * LionTextarea: extension of lion-field with native input element in place and user friendly API
 *
 * @customElement lion-textarea
 */
export class LionTextarea extends LionTextarea_base {
    /** @type {any} */
    static get properties(): any;
    static get styles(): (import("lit").CSSResultOrNative | import("lit").CSSResultArray)[];
    get slots(): {
        input: () => HTMLTextAreaElement;
    };
    rows: number;
    maxRows: number;
    placeholder: string;
    __intersectionObserver: IntersectionObserver | undefined;
    /** @param {import('lit').PropertyValues } changedProperties */
    updated(changedProperties: import('lit').PropertyValues): void;
    /**
     * To support maxRows we need to set max-height of the textarea
     */
    setTextareaMaxHeight(): void;
    /**
     * @returns {Promise<boolean>|Promise<boolean|any>}
     */
    get updateComplete(): Promise<boolean> | Promise<any>;
    resizeTextarea(): void;
    /** @private */
    private __initializeAutoresize;
    __textareaUpdateComplete: any;
    /** @private */
    private __waitForTextareaRenderedInRealDOM;
    /** @private */
    private __startAutoresize;
}
declare class LionFieldWithTextArea extends LionField {
    /**
     * @returns {HTMLTextAreaElement}
     * @protected
     */
    protected get _inputNode(): HTMLTextAreaElement;
}
import { LionField } from "../../../exports/form-core.js";
export {};
//# sourceMappingURL=LionTextarea.d.ts.map