/**
 * @typedef {import('../../../types/FormControlMixinTypes.js').FormControlHost} FormControlHost
 */
export class Required extends Validator {
    static get validatorName(): string;
    /**
     * In order to prevent accessibility violations, the aria-required attribute will
     * be combined with compatible aria roles: https://www.w3.org/TR/wai-aria/#aria-required
     */
    static get _compatibleRoles(): string[];
    /**
     * In order to prevent accessibility violations, the aria-required attribute will
     * be combined with compatible platform input elements
     */
    static get _compatibleTags(): string[];
    /**
     * We don't have an execute function, since the Required validator is 'special'.
     * The outcome depends on the modelValue of the FormControl and
     * FormControl.__isEmpty / FormControl._isEmpty.
     */
    /**
     * @param {FormControlHost & HTMLElement} formControl
     */
    onFormControlConnect({ _inputNode: inputNode }: FormControlHost & HTMLElement): void;
    /**
     * @param {FormControlHost & HTMLElement} formControl
     */
    onFormControlDisconnect({ _inputNode: inputNode }: FormControlHost & HTMLElement): void;
}
export type FormControlHost = import('../../../types/FormControlMixinTypes.js').FormControlHost;
import { Validator } from "../Validator.js";
//# sourceMappingURL=Required.d.ts.map